@charset 'utf-8';

@import 'bourbon';
@import 'grid-settings';
@import 'neat';
// @import 'base/base';
@import 'grid-settings';


////////////////////////////////////////////////////////////////////////////////
// #  Variables
//
// Much of the typographic sizing for the body is setup here to accompany body
// text set at 16px.

$leading-body:            1.8;
$leading-heading:         1.4;
$type-size-body:          16;

// ## Spacing based on the leading (the line-height).
//
// This spacing unit is relative to the element’s font-size/$leading-body. We
// setup the leading (base line-hight) as our spacing unit (in ems).
//
$line-single:             ($leading-body * 1em); // 1.6em
$line-double:             ($line-single * 2);
$line-three-quarter:      ($line-single * .75);
$line-half:               ($line-single / 2);
$line-quarter:            ($line-single / 4);

// ## Colours
//
$white:                   #fff;
$black:                   #000;

$off-white:               #f0f3f5;
$off-black:               #101010;


$grey:                    #6e6e6e;
$light-grey:              lighten($grey, 15%);
$dark-grey:               lighten($grey, 20%);


$action-colour: #477dca !default;


// ## Type families
//
$font-stack-monospace: 'Lucida Sans Typewriter', 'Lucida Console', Monaco, 'Bitstream Vera Sans Mono', monospace;

$font-stack-system: (
  -apple-system,
  BlinkMacSystemFont,
  "Avenir Next",
  "Avenir",
  "Segoe UI",
  "Lucida Grande",
  "Helvetica Neue",
  "Helvetica",
  "Fira Sans",
  "Roboto",
  "Noto",
  "Droid Sans",
  "Cantarell",
  "Oxygen",
  "Ubuntu",
  "Franklin Gothic Medium",
  "Century Gothic",
  "Liberation Sans",
  sans-serif,
);

// Animations
$base-duration: 150ms;
$base-timing: ease;

////////////////////////////////////////////////////////////////////////////////
// #  Mixins & functions

// ## Pixel to rem function
//
// Input: unitless numbers (the intended pixel value output).
//
// Assumes that the the body or html has a font-size of 16px.
//
// Effectively re-implements Bourbon’s pixel to rem calc function from <5.0.0.
//
@function rem($pxval) {
  $base-size: $type-size-body;

  @return ($pxval / $base-size) * 1rem;
}

@mixin wrapper-padding {
  @include media($desktop) {
    padding-left: $gutter * 2;
    padding-right: $gutter * 2;
    width: 100%;
    // min-width: ...;
  }

  box-sizing: border-box;
  padding-left: $gutter;
  padding-right: $gutter;

  width: 100%;
}

@mixin wrapper {
  @include wrapper-padding;
  @include outer-container;
}


////////////////////////////////////////////////////////////////////////////////
// #  Custom partial imports
@import 'body';
@import 'headings';
@import 'header';
// @import 'navigation';
@import 'footer';


////////////////////////////////////////////////////////////////////////////////
// #  Base styles
main {
  @include media($desktop) {
    padding-top: $line-double;
  }

  @include wrapper-padding;

  border-top: 3px solid #c1c1c1; //clean me up
  padding-top: $line-single;

  p,
  dl,
  ul,
  ol,
  blockquote {
    // we’re gonna keep our line-lengths/measures in check
    max-width: 50em;
  }

  blockquote {
    font-family: Georgia, serif;
    margin: $line-half 0;
    padding: 0 rem(36);
    quotes: '\201C''\201D''\2018''\2019';

    &::before,
    &::after {
      color: $action-colour;
      display: block;
      font-family: Georgia, serif;
      font-size: rem(43);
      height: 0;
    }

    &::before {
      content: open-quote;
      margin-left: -(rem(24));
    }

    &::after {
      content: close-quote;
      margin-right: -(rem(24));
      margin-top: -($line-half);
      padding-bottom: $line-half;
      text-align: right;
    }
  }

  ul,
  ol,
  dl {
    margin-bottom: $line-single;
    padding-left: 0;
  }

  li {
    margin-left: $line-single;
  }

  ul {
    li {
      list-style: disc;
    }
  }

  &.cfpw {
    ul {
      @include media($desktop) {
        column-count: 2;
        column-gap: $line-double;
        column-width: auto;
      }
    }
  }
}
